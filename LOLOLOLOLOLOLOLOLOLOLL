-- FPS Booster Script for Da Hood with Hitbox Expander and Shot Detection Fix

local hitboxSize = getgenv().HitboxSize  -- Custom hitbox size (single number)
local showVisualHitbox = getgenv().ShowHitboxVisual  -- Whether to show the visual hitbox

local visualHitboxParts = {}  -- Table to store visual hitboxes for each player

game:GetService("RunService").RenderStepped:Connect(function()
    -- Iterate through all players
    for _, player in ipairs(game.Players:GetPlayers()) do
        -- Only apply to other players (not the local player)
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character.HumanoidRootPart

            -- Apply hitbox expansion: Change size and disable collision
            humanoidRootPart.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
            humanoidRootPart.CanCollide = false  -- Prevent collision so you can walk through

            -- Disable collision for all other parts of the player's character
            for _, part in ipairs(player.Character:GetChildren()) do
                if part:IsA("Part") then
                    part.CanCollide = false
                end
            end

            -- Show visual hitbox if enabled
            if showVisualHitbox then
                -- Create a visual hitbox part if not already created
                if not visualHitboxParts[player.UserId] then
                    local visualPart = Instance.new("Part")
                    visualPart.Size = humanoidRootPart.Size
                    visualPart.Shape = Enum.PartType.Block  -- Box shape for the visual hitbox
                    visualPart.Position = humanoidRootPart.Position
                    visualPart.Anchored = true
                    visualPart.CanCollide = false  -- Make the visual part non-collidable (walk through it)
                    visualPart.Transparency = 0.7  -- Set transparency to 0.7 to make it semi-transparent
                    visualPart.Color = Color3.fromRGB(169, 169, 169)  -- Slightly grey color
                    visualPart.Parent = player.Character

                    -- Store the visual part in the table for later updates
                    visualHitboxParts[player.UserId] = visualPart
                else
                    -- Update the existing visual part's size and position
                    local visualPart = visualHitboxParts[player.UserId]
                    visualPart.Size = humanoidRootPart.Size
                    visualPart.Position = humanoidRootPart.Position
                end
            end

            -- Handle hit detection (Raycast)
            local ray = Ray.new(player.Character.HumanoidRootPart.Position, (player.Character.HumanoidRootPart.Position - workspace.CurrentCamera.CFrame.p).unit * 100)  -- Adjust the range as needed
            local hitPart, hitPosition = workspace:FindPartOnRay(ray, game.Players.LocalPlayer.Character)

            if hitPart and hitPart.Parent == player.Character then
                -- If a shot hits the player's hitbox (HumanoidRootPart)
                print(player.Name .. " was hit!")
            end
        else
            -- If the player doesn't have a humanoidRootPart or their character is missing,
            -- remove their visual hitbox if it exists.
            if visualHitboxParts[player.UserId] then
                visualHitboxParts[player.UserId]:Destroy()
                visualHitboxParts[player.UserId] = nil
            end
        end
    end
end)
