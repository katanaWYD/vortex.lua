-- External script (vortex.lua)

-- Fetch the hitbox size and FOV setting from the environment variable set in the main script
local hitboxSize = getgenv().HitboxSize
local fov = getgenv().FOV  -- Fetch the FOV setting

game:GetService("RunService").RenderStepped:Connect(function()
    local camera = game.Workspace.CurrentCamera  -- Get the current camera
    local cameraCFrame = camera.CFrame  -- Get the camera's CFrame
    local cameraPosition = camera.CFrame.Position  -- Camera's position in the world
    local cameraForward = camera.CFrame.LookVector  -- Camera's forward direction vector

    -- Iterate through all players
    for _, player in next, game.Players:GetPlayers() do
        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character.HumanoidRootPart
            local playerPosition = humanoidRootPart.Position  -- Get player's position
            local playerDirection = (playerPosition - cameraPosition).unit  -- Get direction from camera to player
            local dotProduct = cameraForward:Dot(playerDirection)  -- Dot product of camera direction and player direction
            
            -- Calculate the angle between camera and player
            local angle = math.deg(math.acos(dotProduct))  -- Convert the dot product to an angle

            -- Check if the player is within the specified FOV
            if angle <= fov then
                -- Apply hitbox expansion if within the FOV
                humanoidRootPart.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
                humanoidRootPart.CanCollide = false  -- Allow walking through the player
            else
                -- Reset hitbox size if outside the FOV
                humanoidRootPart.Size = humanoidRootPart.Size  -- Keep original size
                humanoidRootPart.CanCollide = true  -- Re-enable collision
            end
        end
    end
end)
