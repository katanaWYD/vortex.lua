-- Main Script

-- Wait for the settings to be loaded from the external script
local set = _G.set  -- Access settings from the global table

if not set then
    error("Settings not loaded. Please load the settings first.")
end

-- Services
local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local runService = game:GetService("RunService")
local userInputService = game:GetService("UserInputService")
local starterGui = game:GetService("StarterGui")
local tweenService = game:GetService("TweenService")
local lighting = game:GetService("Lighting")

-- Variables
local hitboxPlayer = nil
local hitboxSize = set.size

-- Throttling Key Press Processing
local lastKeyPress = 0
local keyPressDelay = 0.2  -- Delay to prevent rapid firing of key presses

-- Splash Screen setup with Blur
local function showSplashScreen()
    -- Create Blur effect
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Parent = lighting
    blurEffect.Size = 24

    -- Create a ScreenGui to hold the splash screen
    local splashScreen = Instance.new("ScreenGui")
    splashScreen.Parent = player.PlayerGui
    splashScreen.IgnoreGuiInset = true

    -- Create the text in the center of the screen
    local splashText = Instance.new("TextLabel")
    splashText.Parent = splashScreen
    splashText.Size = UDim2.new(0, 400, 0, 50)
    splashText.Text = "vortex.lol"
    splashText.TextColor3 = Color3.fromRGB(255, 255, 255)
    splashText.TextSize = 36
    splashText.Font = Enum.Font.GothamBold
    splashText.TextStrokeTransparency = 0.5
    splashText.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
    splashText.BackgroundTransparency = 0.5
    splashText.AnchorPoint = Vector2.new(0.5, 0.5)
    splashText.Position = UDim2.new(0.5, -splashText.Size.X.Offset / 2, 0.5, -splashText.Size.Y.Offset / 2)

    -- Create the fade-out tween for the text
    local fadeOutTextTween = tweenService:Create(splashText, TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {TextTransparency = 1})
    fadeOutTextTween:Play()

    -- Create the fade-out tween for the blur effect
    local fadeBlurTween = tweenService:Create(blurEffect, TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out), {Size = 0})
    fadeBlurTween:Play()

    -- Wait for fade to complete, then remove splash screen
    fadeOutTextTween.Completed:Wait()
    splashScreen:Destroy()
end

-- Call splash screen function
showSplashScreen()

-- Function to find the closest player to the mouse
local function getClosestPlayerToMouse()
    local closestPlayer = nil
    local closestDistance = math.huge

    for _, v in next, game.Players:GetPlayers() do
        if v ~= player and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = v.Character.HumanoidRootPart
            local screenPosition, onScreen = workspace.CurrentCamera:WorldToScreenPoint(humanoidRootPart.Position)
            if onScreen then
                -- Calculate the distance from the mouse
                local distance = (Vector2.new(screenPosition.X, screenPosition.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPlayer = v
                end
            end
        end
    end

    return closestPlayer
end

-- Function to apply the hitbox to a player
local function applyHitboxToPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
        humanoidRootPart.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
        humanoidRootPart.CanCollide = false
        humanoidRootPart.Transparency = 0.5
    end
end

-- Function to remove the hitbox from a player
local function removeHitboxFromPlayer(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local humanoidRootPart = targetPlayer.Character.HumanoidRootPart
        humanoidRootPart.Size = Vector3.new(2, 2, 2)  -- Default size
        humanoidRootPart.CanCollide = true
        humanoidRootPart.Transparency = 1
    end
end

-- Function to toggle the hitbox on or off
local function toggleHitbox()
    local closestPlayer = getClosestPlayerToMouse()

    if closestPlayer == hitboxPlayer then
        -- Remove hitbox
        removeHitboxFromPlayer(hitboxPlayer)
        hitboxPlayer = nil
    else
        -- Remove previous hitbox and apply to the new player
        if hitboxPlayer then
            removeHitboxFromPlayer(hitboxPlayer)
        end
        hitboxPlayer = closestPlayer
        applyHitboxToPlayer(hitboxPlayer)
    end
end

-- Function to show Roblox notification
local function showNotification(message)
    starterGui:SetCore("SendNotification", {
        Title = "Hitbox Size Changed",
        Text = message,
        Duration = 2
    })
end

-- Key press event handler for changing hitbox size
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end

    -- Throttle the key press to prevent rapid firing
    local currentTime = tick()
    if currentTime - lastKeyPress < keyPressDelay then return end
    lastKeyPress = currentTime

    -- Handle key press for changing hitbox size
    if set.sizeMap[input.KeyCode] then
        hitboxSize = set.sizeMap[input.KeyCode]
        print("Hitbox size changed to: " .. hitboxSize)
        showNotification("Hitbox size: " .. hitboxSize)
    end

    -- Check for toggle key (configured in set.toggleKey)
    if input.KeyCode == set.toggleKey then
        toggleHitbox()
    end
end)

-- Monitor the closest player and apply hitbox while it's toggled on
runService.RenderStepped:Connect(function()
    if hitboxPlayer then
        local closestPlayer = getClosestPlayerToMouse()
        if closestPlayer == hitboxPlayer then
            applyHitboxToPlayer(closestPlayer)
        end
    end
end)

-- Print keybind info for the user
print("Press N, M, B, K, J, H, U, Y to change hitbox size.")
print("Press Q to toggle the hitbox on/off.")
