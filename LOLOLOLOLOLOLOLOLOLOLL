-- External Script (vortex.lua)

-- Ensure proper settings are initialized
local hitboxSize = getgenv().HitboxSize or Vector3.new(10, 10, 10) -- Default to a hitbox size if not set
local macroToggleKey = getgenv().MacroToggleKey or "x" -- Default key for macro toggle
local triggerbotToggleKey = getgenv().TriggerbotToggleKey or "z" -- Default key for triggerbot toggle
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local lastUpdated = tick() -- Store the time of the last update

local updateInterval = 0.1 -- Update every 0.1 seconds to reduce unnecessary processing

local triggerbotEnabled = getgenv().triggerbotEnabled or false -- Initialize triggerbot state
local mouse = game:GetService("Players").LocalPlayer:GetMouse()

-- Whitelist of Roblox IDs
local whitelist = {
    7278444088, -- Replace with actual Roblox user IDs
    9876543210, -- Replace with actual Roblox user IDs
    -- Add more user IDs as needed
}

-- Function to check if the player's Roblox ID is in the whitelist
local function isWhitelisted(player)
    for _, id in ipairs(whitelist) do
        if player.UserId == id then
            return true
        end
    end
    return false
end

-- Function to update hitbox and collisions
local function updatePlayerHitbox(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character.HumanoidRootPart
        -- Only update if the size or collision status has changed
        if hrp.Size ~= hitboxSize then
            hrp.Size = hitboxSize
        end
        if hrp.CanCollide then
            hrp.CanCollide = false
        end
    end
end

-- Triggerbot functionality with raycasting for shooting
local function isAimingAtPlayer()
    local target = nil
    local closestDistance = math.huge
    for _, player in ipairs(players:GetPlayers()) do
        if player ~= players.LocalPlayer and player.Character then
            local character = player.Character
            -- Check all parts of the player's character (HumanoidRootPart, Head, Torso, etc.)
            local parts = {}
            for _, part in ipairs(character:GetChildren()) do
                if part:IsA("BasePart") and part.CanCollide then
                    table.insert(parts, part)
                end
            end

            for _, part in ipairs(parts) do
                local screenPosition, onScreen = workspace.CurrentCamera:WorldToScreenPoint(part.Position)
                if onScreen then
                    local distance = (Vector2.new(screenPosition.X, screenPosition.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
                    -- Consider it a target if the crosshair is near the part (within 20 pixels)
                    if distance < 20 then
                        closestDistance = distance
                        target = player
                    end
                end
            end
        end
    end
    return target
end

-- Raycast function to simulate shooting at the player
local function shootAtPlayer(target)
    if target and target.Character then
        -- Cast a ray from the camera's position to the player's character
        local camera = workspace.CurrentCamera
        local rayOrigin = camera.CFrame.Position
        local rayDirection = (target.Character.HumanoidRootPart.Position - rayOrigin).unit * 999 -- Long distance
        local ray = Ray.new(rayOrigin, rayDirection)

        -- Perform the raycast
        local hitPart, hitPosition = workspace:FindPartOnRay(ray, game:GetService("Players"):GetPlayers(), true, true)
        
        -- If the ray hits a body part (other than the player itself), trigger the shot
        if hitPart and hitPart.Parent:FindFirstChild("Humanoid") then
            -- Simulate shooting here, for example triggering the gun's fire function
            mouse1click()  -- Placeholder for the actual shooting logic
        end
    end
end

local function activateTriggerbot()
    if triggerbotEnabled then
        local target = isAimingAtPlayer()  -- Get the player under the crosshair
        if target then
            -- Triggerbot: simulate shooting when the crosshair is over any part of the target's body
            shootAtPlayer(target)
        end
    end
end

-- Toggle triggerbot on/off with a key press
mouse.KeyDown:Connect(function(Key)
    if Key == macroToggleKey then
        -- Toggle speed glitch
        SpeedGlitch = not SpeedGlitch
        if SpeedGlitch then
            repeat 
                game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", true, game)
                wait(0.000001)
                game:GetService("VirtualInputManager"):SendMouseWheelEvent("0", "0", false, game)
                wait(0.000001)
            until not SpeedGlitch
        end
    elseif Key == triggerbotToggleKey then
        -- Toggle triggerbot on/off
        triggerbotEnabled = not triggerbotEnabled
        local status = triggerbotEnabled and "enabled" or "disabled"
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Triggerbot", 
            Text = "Triggerbot " .. status,
            Duration = 3
        })
    end
end)

-- Wait for 3 seconds before changing the notification to "Ready!"
wait(3)

-- Change notification after 3 seconds
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Whitelisted", 
    Text = "Ready!",
    Icon = "rbxassetid://1234567890", -- Optional icon
    Duration = 3 -- Duration for the "Ready!" message
})

-- Update hitbox for other players periodically
runService.Heartbeat:Connect(function()
    -- Only run the hitbox expander if the player is whitelisted
    if isWhitelisted(players.LocalPlayer) then
        local currentTime = tick()
        if currentTime - lastUpdated >= updateInterval then
            -- Update hitboxes for all players, except the local player
            for _, v in next, players:GetPlayers() do
                if v ~= players.LocalPlayer then
                    updatePlayerHitbox(v)
                end
            end
            lastUpdated = currentTime -- Update the last update time
        end
    end

    -- If triggerbot is active, try to shoot
    if triggerbotEnabled then
        activateTriggerbot()
    end
end)
