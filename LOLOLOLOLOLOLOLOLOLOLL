-- External Script (e.g., vortex.lua)
local hitboxSize = getgenv().HitboxSize
local players = game:GetService("Players")
local runService = game:GetService("RunService")
local lastUpdated = tick() -- Store the time of the last update

local updateInterval = 0.1 -- Update every 0.1 seconds to reduce unnecessary processing

-- Function to update hitbox and collisions
local function updatePlayerHitbox(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = player.Character.HumanoidRootPart
        -- Only update if the size or collision status has changed
        if hrp.Size ~= hitboxSize then
            hrp.Size = hitboxSize
        end
        if hrp.CanCollide then
            hrp.CanCollide = false
        end
    end
end

-- Using Heartbeat instead of RenderStepped
runService.Heartbeat:Connect(function()
    local currentTime = tick()
    if currentTime - lastUpdated >= updateInterval then
        -- Update hitboxes for all players, except the local player
        for _, v in next, players:GetPlayers() do
            if v ~= players.LocalPlayer then
                updatePlayerHitbox(v)
            end
        end
        lastUpdated = currentTime -- Update the last update time
    end
end)
